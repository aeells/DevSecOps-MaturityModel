---
Monitoring:

  Simple application metrics:
    risk: Attacks on an application or system go unnoticed.
    measure: Gathering of application metrics helps to identify incidents such as brute force login attempts or DDoS attacks.
    difficultyOfImplementation:
      knowledge: 2
      time: 2
      resources: 2
    usefulness: 5
    level: 1
    implementation: Prometheus
    samm2: o-incident-management|A|1

  Simple system metrics:
    risk: Without simple metrics, analysis and interpretation of incidents can be difficult. In the case an application with CPU spikes, it might be hard for Operations to
      ascertain the source of the issue relying on Linux commands alone.
    measure: Gathering of system metrics helps to identify and troubleshoot incidents.
    difficultyOfImplementation:
      knowledge: 2
      time: 2
      resources: 2
    usefulness: 5
    level: 1
    implementation: collectd, AWS CloudWatch
    samm2: o-incident-management|A|1

  Metrics dashboards:
    risk: Not vizualising metrics lead to restricted awareness, feedback and corrective behaviour.
    measure: Metrics vizualised in realtime in a user-friendly way.
    difficultyOfImplementation:
      knowledge: 1
      time: 2
      resources: 2
    usefulness: 3
    level: 2
    implementation: Graphite, Datadog
    dependsOn:
      - Simple application metrics
      - Simple system metrics
    samm2: o-incident-management|A|2

  Alerting:
    risk: Incidents are discovered after they occur and continue to occur affecting more customers than necessary.
    measure: Thresholds for metrics are set and alarms triggered if thresholds met. Notifications can then be sent to Operations to investigate with immediate effect.
    difficultyOfImplementation:
      knowledge: 2
      time: 5
      resources: 5
    usefulness: 5
    level: 2
    implementation: AWS CloudWatch & SNS, ServiceNow
    dependsOn:
      - Visualized metrics
    samm2: o-operational-management|B|3
    samm: OE1-B

  Advanced availablity and stability metrics:
    risk: Trends and advanced attacks are not detected.
    measure: Advanced metrics are gathered in relation to availability and stability of platform. For example unplanned downtimes per year are captured and reported.
    difficultyOfImplementation:
      knowledge: 3
      time: 3
      resources: 2
    usefulness: 4
    level: 3
    dependsOn:
    - Simple application metrics
    - Visualized metrics
    samm2: o-incident-management|A|2

  Advanced web application metrics:
    risk: Awareness of various aspects which could affect customer experience is limited without monitoring and reporting. For instance, incorrect Google tags in search results,
      missing static content and 404 requests, repeatable or consistent stack traces or a throughput bottleneck with a specific application feature.
    measure: All defects from the Test Verification dimension are instrumented.
    difficultyOfImplementation:
      knowledge: 3
      time: 3
      resources: 2
    usefulness: 4
    level: 3
    dependsOn:
    - Simple application metrics
    - Visualized metrics
    samm2: o-incident-management|A|2

  Deactivation of redundant metrics:
    risk: Significant resources may be utilised in gathering redundant metrics.
    measure: Deactivation of unused metrics helps to free up resources, either manual or automated.
    difficultyOfImplementation:
      knowledge: 2
      time: 5
      resources: 5
    usefulness: 5
    level: 3
    dependsOn:
      - Visualized metrics
    samm2: o-incident-management|A|1

  Coverage and control metrics:
    risk: Coverage and control metrics characterize how successful an organization is at extending the reach of its security r√©gime. Most security programs are full of good
      intentions, usually expressed formally through some sort of policy. But the reality of suboptimal implementation and poor end-user compliance often puts the shaft to all
      those good intentions.
    measure: Coverage and control metrics, then, are essential to helping managers understand the size of the gap between intentions and facts on the ground.
      The control degree shows the actual application of security standards and security-guidelines. Examples are gathering information on anti-virus, anti-rootkits, patch
      management, server configuration and vulnerability management.
    difficultyOfImplementation:
      knowledge: 3
      time: 5
      resources: 2
    usefulness: 4
    level: 4
    dependsOn:
    - Visualized metrics
    implementation: https://ht.transparencytoolkit.org/FileServer/FileServer/OLD%20Fileserver/books/SICUREZZA/Addison.Wesley.Security.Metrics.Mar.2007.pdf
    samm2: o-incident-management|A|2

  Defence metrics:
    risk: IDS & IPS tools like packet or application firewalls detect and prevent attacks. It is not known how many attacks have been detected and blocked.
    measure: Gathering of defence metrics such as TCP/UDP sources for instance would enable one to assume the geographic location requests.
    difficultyOfImplementation:
      knowledge: 3
      time: 5
      resources: 2
    usefulness: 4
    level: 4
    dependsOn:
    - Visualized metrics
    samm2: o-incident-management|A|2

Logging:

  PII logging policy:
    risk: Personal Identifiable Information (PII) is logged and GDPR regulations are contravened.
    measure: A strategy for how to log PII is documented and enforced.
    difficultyOfImplementation:
      knowledge: 1
      time: 1
      resources: 1
    usefulness: 1
    level: 1
    implementation: rsyslog, loggly, fluentd, bash
    samm2: o-incident-management|A|1

  Record of security-related events:
    risk: No record of security-related events makes it harder to analyse an incident.
    measure: Security-related events such as login or logout or change of password should be logged and auditable.
    difficultyOfImplementation:
      knowledge: 1
      time: 1
      resources: 1
    usefulness: 4
    level: 1
    dependsOn:
      - PII logging policy
    implementation: rsyslog, logstash, fluentd, bash
    samm2: o-incident-management|A|1

  Centralized system logging:
    risk: Locally stored system logs can be manipulated by attackers or unauthorized users with systems access, or might be corrupted by an incident.
      In addition, it is hard to perform aggregation of logs until they are shipped to a central store so the full security picture of an incident cannot be learned.
    measure: By implementing centralized logging, system logs are protected against unauthorized modification and a clearer security picture of events emerges.
    difficultyOfImplementation:
      knowledge: 1
      time: 1
      resources: 1
    usefulness: 2
    level: 1
    implementation: rsyslog, Logstash
    samm2: o-incident-management|A|1

  Aggregated log visualisation:
    risk: System and application logs are not aggregated properly which leads to little or no logging assessment.
    measure: Logs are collected, aggregated and graphed in a simple to use real time monitoring system. The GUI gives the ability to search the logs for specific user attributes
      or security-related events etc.
    difficultyOfImplementation:
      knowledge: 1
      time: 3
      resources: 3
    usefulness: 4
    level: 2
    dependsOn:
      - Centralized system logging
      - Centralized application logging
    implementation: ELK-Stack
    samm2: o-incident-management|A|1

  Centralized application logging:
    risk: Locally stored application logs can be manipulated by attackers or unauthorized users with systems access, or might be corrupted by an incident.
      In addition, it is hard to perform aggregation of logs until they are shipped to a central store so the full security picture of an incident cannot be learned.
    measure: By implementing centralized logging, application logs are protected against unauthorized modification and a clearer security picture of events emerges.
    difficultyOfImplementation:
      knowledge: 1
      time: 1
      resources: 1
    usefulness: 5
    level: 3
    dependsOn:
      - Aggregated log visualisation
      - Alerting
    samm: SA2-B
    samm2: o-incident-management|A|1

  Correlation of security-related events:
    risk: Detection of security related events across different systems/tools/metrics is not possible.
    measure: Events are correlated on a single system. For example the correlation and visualisation of user login attempts to successful logins.
    difficultyOfImplementation:
      knowledge: 4
      time: 4
      resources: 4
    usefulness: 3
    level: 4
    dependsOn:
    - Aggregated log visualisation
    - Alerting
    samm2: o-incident-management|A|2

...
